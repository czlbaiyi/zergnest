/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.gamemsg.CS21001', null, global);
goog.exportSymbol('proto.gamemsg.CS21001.PacketType', null, global);
goog.exportSymbol('proto.gamemsg.PB_Player', null, global);
goog.exportSymbol('proto.gamemsg.PB_Player.PB_RoleType', null, global);
goog.exportSymbol('proto.gamemsg.PB_PlayerProperty', null, global);
goog.exportSymbol('proto.gamemsg.PB_PlayerProperty.PB_RolePropertyType', null, global);
goog.exportSymbol('proto.gamemsg.SC21002', null, global);
goog.exportSymbol('proto.gamemsg.SC21002.PacketType', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gamemsg.PB_PlayerProperty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gamemsg.PB_PlayerProperty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gamemsg.PB_PlayerProperty.displayName = 'proto.gamemsg.PB_PlayerProperty';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gamemsg.PB_PlayerProperty.prototype.toObject = function(opt_includeInstance) {
  return proto.gamemsg.PB_PlayerProperty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gamemsg.PB_PlayerProperty} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gamemsg.PB_PlayerProperty.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gamemsg.PB_PlayerProperty}
 */
proto.gamemsg.PB_PlayerProperty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gamemsg.PB_PlayerProperty;
  return proto.gamemsg.PB_PlayerProperty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gamemsg.PB_PlayerProperty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gamemsg.PB_PlayerProperty}
 */
proto.gamemsg.PB_PlayerProperty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.gamemsg.PB_PlayerProperty.PB_RolePropertyType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gamemsg.PB_PlayerProperty} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gamemsg.PB_PlayerProperty.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gamemsg.PB_PlayerProperty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gamemsg.PB_PlayerProperty.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getValue();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional PB_RolePropertyType type = 1;
 * @return {!proto.gamemsg.PB_PlayerProperty.PB_RolePropertyType}
 */
proto.gamemsg.PB_PlayerProperty.prototype.getType = function() {
  return /** @type {!proto.gamemsg.PB_PlayerProperty.PB_RolePropertyType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.gamemsg.PB_PlayerProperty.PB_RolePropertyType} value */
proto.gamemsg.PB_PlayerProperty.prototype.setType = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 value = 2;
 * @return {number}
 */
proto.gamemsg.PB_PlayerProperty.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.gamemsg.PB_PlayerProperty.prototype.setValue = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.gamemsg.PB_PlayerProperty.PB_RolePropertyType = {
  LEVEL: 0,
  EXP: 1,
  MAX_EXP: 2,
  GOLD: 3,
  DIAMONDS: 4
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gamemsg.PB_Player = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gamemsg.PB_Player, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gamemsg.PB_Player.displayName = 'proto.gamemsg.PB_Player';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gamemsg.PB_Player.prototype.toObject = function(opt_includeInstance) {
  return proto.gamemsg.PB_Player.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gamemsg.PB_Player} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gamemsg.PB_Player.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    roletype: jspb.Message.getFieldWithDefault(msg, 2, 0),
    playerprop: (f = msg.getPlayerprop()) && proto.gamemsg.PB_PlayerProperty.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gamemsg.PB_Player}
 */
proto.gamemsg.PB_Player.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gamemsg.PB_Player;
  return proto.gamemsg.PB_Player.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gamemsg.PB_Player} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gamemsg.PB_Player}
 */
proto.gamemsg.PB_Player.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.gamemsg.PB_Player.PB_RoleType} */ (reader.readEnum());
      msg.setRoletype(value);
      break;
    case 3:
      var value = new proto.gamemsg.PB_PlayerProperty;
      reader.readMessage(value,proto.gamemsg.PB_PlayerProperty.deserializeBinaryFromReader);
      msg.setPlayerprop(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gamemsg.PB_Player} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gamemsg.PB_Player.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gamemsg.PB_Player.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gamemsg.PB_Player.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getRoletype();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = this.getPlayerprop();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gamemsg.PB_PlayerProperty.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.gamemsg.PB_Player.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gamemsg.PB_Player.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional PB_RoleType roleType = 2;
 * @return {!proto.gamemsg.PB_Player.PB_RoleType}
 */
proto.gamemsg.PB_Player.prototype.getRoletype = function() {
  return /** @type {!proto.gamemsg.PB_Player.PB_RoleType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.gamemsg.PB_Player.PB_RoleType} value */
proto.gamemsg.PB_Player.prototype.setRoletype = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional PB_PlayerProperty playerProp = 3;
 * @return {?proto.gamemsg.PB_PlayerProperty}
 */
proto.gamemsg.PB_Player.prototype.getPlayerprop = function() {
  return /** @type{?proto.gamemsg.PB_PlayerProperty} */ (
    jspb.Message.getWrapperField(this, proto.gamemsg.PB_PlayerProperty, 3));
};


/** @param {?proto.gamemsg.PB_PlayerProperty|undefined} value */
proto.gamemsg.PB_Player.prototype.setPlayerprop = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.gamemsg.PB_Player.prototype.clearPlayerprop = function() {
  this.setPlayerprop(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gamemsg.PB_Player.prototype.hasPlayerprop = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.gamemsg.PB_Player.PB_RoleType = {
  PB_ROLETYPE_NAN: 0,
  PB_ROLETYPE_NV: 1
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gamemsg.CS21001 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gamemsg.CS21001, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gamemsg.CS21001.displayName = 'proto.gamemsg.CS21001';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gamemsg.CS21001.prototype.toObject = function(opt_includeInstance) {
  return proto.gamemsg.CS21001.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gamemsg.CS21001} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gamemsg.CS21001.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sessionid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    serverid: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gamemsg.CS21001}
 */
proto.gamemsg.CS21001.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gamemsg.CS21001;
  return proto.gamemsg.CS21001.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gamemsg.CS21001} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gamemsg.CS21001}
 */
proto.gamemsg.CS21001.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAccountid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setServerid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gamemsg.CS21001} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gamemsg.CS21001.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gamemsg.CS21001.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gamemsg.CS21001.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getAccountid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getServerid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int64 accountId = 1;
 * @return {number}
 */
proto.gamemsg.CS21001.prototype.getAccountid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.gamemsg.CS21001.prototype.setAccountid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string sessionId = 2;
 * @return {string}
 */
proto.gamemsg.CS21001.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gamemsg.CS21001.prototype.setSessionid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 serverId = 3;
 * @return {number}
 */
proto.gamemsg.CS21001.prototype.getServerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.gamemsg.CS21001.prototype.setServerid = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.gamemsg.CS21001.PacketType = {
  PB_TEMP: 0,
  PB_PACKTYPE: 21001,
  PB_PACKRETTYPE: 21002
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gamemsg.SC21002 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gamemsg.SC21002, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gamemsg.SC21002.displayName = 'proto.gamemsg.SC21002';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gamemsg.SC21002.prototype.toObject = function(opt_includeInstance) {
  return proto.gamemsg.SC21002.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gamemsg.SC21002} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gamemsg.SC21002.toObject = function(includeInstance, msg) {
  var f, obj = {
    player: (f = msg.getPlayer()) && proto.gamemsg.PB_Player.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gamemsg.SC21002}
 */
proto.gamemsg.SC21002.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gamemsg.SC21002;
  return proto.gamemsg.SC21002.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gamemsg.SC21002} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gamemsg.SC21002}
 */
proto.gamemsg.SC21002.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gamemsg.PB_Player;
      reader.readMessage(value,proto.gamemsg.PB_Player.deserializeBinaryFromReader);
      msg.setPlayer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gamemsg.SC21002} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gamemsg.SC21002.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gamemsg.SC21002.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gamemsg.SC21002.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getPlayer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gamemsg.PB_Player.serializeBinaryToWriter
    );
  }
};


/**
 * optional PB_Player player = 1;
 * @return {?proto.gamemsg.PB_Player}
 */
proto.gamemsg.SC21002.prototype.getPlayer = function() {
  return /** @type{?proto.gamemsg.PB_Player} */ (
    jspb.Message.getWrapperField(this, proto.gamemsg.PB_Player, 1));
};


/** @param {?proto.gamemsg.PB_Player|undefined} value */
proto.gamemsg.SC21002.prototype.setPlayer = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gamemsg.SC21002.prototype.clearPlayer = function() {
  this.setPlayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gamemsg.SC21002.prototype.hasPlayer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * @enum {number}
 */
proto.gamemsg.SC21002.PacketType = {
  PB_TEMP: 0,
  PB_PACKTYPE: 21002
};

goog.object.extend(exports, proto.gamemsg);
