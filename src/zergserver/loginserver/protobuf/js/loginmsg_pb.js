/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.loginmsg.CS11001', null, global);
goog.exportSymbol('proto.loginmsg.CS11001.PB_PlatformType', null, global);
goog.exportSymbol('proto.loginmsg.CS11001.PacketType', null, global);
goog.exportSymbol('proto.loginmsg.PB_AccountLoginHistory', null, global);
goog.exportSymbol('proto.loginmsg.PB_AccountLoginHistory.PB_LoginRoleTye', null, global);
goog.exportSymbol('proto.loginmsg.PB_ServerInfo', null, global);
goog.exportSymbol('proto.loginmsg.PB_ServerInfo.PB_ServerStatus', null, global);
goog.exportSymbol('proto.loginmsg.SC11002', null, global);
goog.exportSymbol('proto.loginmsg.SC11002.PacketType', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.loginmsg.PB_ServerInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.loginmsg.PB_ServerInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.loginmsg.PB_ServerInfo.displayName = 'proto.loginmsg.PB_ServerInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.loginmsg.PB_ServerInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.loginmsg.PB_ServerInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.loginmsg.PB_ServerInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.loginmsg.PB_ServerInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    serverid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    servername: jspb.Message.getFieldWithDefault(msg, 2, ""),
    serverurl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.loginmsg.PB_ServerInfo}
 */
proto.loginmsg.PB_ServerInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.loginmsg.PB_ServerInfo;
  return proto.loginmsg.PB_ServerInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.loginmsg.PB_ServerInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.loginmsg.PB_ServerInfo}
 */
proto.loginmsg.PB_ServerInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setServerid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setServername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setServerurl(value);
      break;
    case 4:
      var value = /** @type {!proto.loginmsg.PB_ServerInfo.PB_ServerStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.loginmsg.PB_ServerInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.loginmsg.PB_ServerInfo.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.loginmsg.PB_ServerInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.loginmsg.PB_ServerInfo.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getServerid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = this.getServername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getServerurl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional int32 serverId = 1;
 * @return {number}
 */
proto.loginmsg.PB_ServerInfo.prototype.getServerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.loginmsg.PB_ServerInfo.prototype.setServerid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string serverName = 2;
 * @return {string}
 */
proto.loginmsg.PB_ServerInfo.prototype.getServername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.loginmsg.PB_ServerInfo.prototype.setServername = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string serverUrl = 3;
 * @return {string}
 */
proto.loginmsg.PB_ServerInfo.prototype.getServerurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.loginmsg.PB_ServerInfo.prototype.setServerurl = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional PB_ServerStatus status = 4;
 * @return {!proto.loginmsg.PB_ServerInfo.PB_ServerStatus}
 */
proto.loginmsg.PB_ServerInfo.prototype.getStatus = function() {
  return /** @type {!proto.loginmsg.PB_ServerInfo.PB_ServerStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.loginmsg.PB_ServerInfo.PB_ServerStatus} value */
proto.loginmsg.PB_ServerInfo.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.loginmsg.PB_ServerInfo.PB_ServerStatus = {
  GOOD: 0,
  CROWD: 1,
  BUSY: 2,
  MAINTAIN: 3
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.loginmsg.PB_AccountLoginHistory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.loginmsg.PB_AccountLoginHistory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.loginmsg.PB_AccountLoginHistory.displayName = 'proto.loginmsg.PB_AccountLoginHistory';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.loginmsg.PB_AccountLoginHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.loginmsg.PB_AccountLoginHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.loginmsg.PB_AccountLoginHistory} msg The msg instance to transform.
 * @return {!Object}
 */
proto.loginmsg.PB_AccountLoginHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    serverid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    roletype: jspb.Message.getFieldWithDefault(msg, 2, 0),
    rolename: jspb.Message.getFieldWithDefault(msg, 3, ""),
    rolelevel: jspb.Message.getFieldWithDefault(msg, 4, 0),
    awakelevel: jspb.Message.getFieldWithDefault(msg, 5, 0),
    viplevel: jspb.Message.getFieldWithDefault(msg, 6, 0),
    updatetime: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.loginmsg.PB_AccountLoginHistory}
 */
proto.loginmsg.PB_AccountLoginHistory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.loginmsg.PB_AccountLoginHistory;
  return proto.loginmsg.PB_AccountLoginHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.loginmsg.PB_AccountLoginHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.loginmsg.PB_AccountLoginHistory}
 */
proto.loginmsg.PB_AccountLoginHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setServerid(value);
      break;
    case 2:
      var value = /** @type {!proto.loginmsg.PB_AccountLoginHistory.PB_LoginRoleTye} */ (reader.readEnum());
      msg.setRoletype(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRolename(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRolelevel(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAwakelevel(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setViplevel(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatetime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.loginmsg.PB_AccountLoginHistory} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.loginmsg.PB_AccountLoginHistory.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.loginmsg.PB_AccountLoginHistory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.loginmsg.PB_AccountLoginHistory.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getServerid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = this.getRoletype();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = this.getRolename();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getRolelevel();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = this.getAwakelevel();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = this.getViplevel();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = this.getUpdatetime();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
};


/**
 * optional int32 serverId = 1;
 * @return {number}
 */
proto.loginmsg.PB_AccountLoginHistory.prototype.getServerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.loginmsg.PB_AccountLoginHistory.prototype.setServerid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional PB_LoginRoleTye roleType = 2;
 * @return {!proto.loginmsg.PB_AccountLoginHistory.PB_LoginRoleTye}
 */
proto.loginmsg.PB_AccountLoginHistory.prototype.getRoletype = function() {
  return /** @type {!proto.loginmsg.PB_AccountLoginHistory.PB_LoginRoleTye} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.loginmsg.PB_AccountLoginHistory.PB_LoginRoleTye} value */
proto.loginmsg.PB_AccountLoginHistory.prototype.setRoletype = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string roleName = 3;
 * @return {string}
 */
proto.loginmsg.PB_AccountLoginHistory.prototype.getRolename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.loginmsg.PB_AccountLoginHistory.prototype.setRolename = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 roleLevel = 4;
 * @return {number}
 */
proto.loginmsg.PB_AccountLoginHistory.prototype.getRolelevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.loginmsg.PB_AccountLoginHistory.prototype.setRolelevel = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional int32 awakeLevel = 5;
 * @return {number}
 */
proto.loginmsg.PB_AccountLoginHistory.prototype.getAwakelevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.loginmsg.PB_AccountLoginHistory.prototype.setAwakelevel = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional int32 vipLevel = 6;
 * @return {number}
 */
proto.loginmsg.PB_AccountLoginHistory.prototype.getViplevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.loginmsg.PB_AccountLoginHistory.prototype.setViplevel = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional int64 updateTime = 7;
 * @return {number}
 */
proto.loginmsg.PB_AccountLoginHistory.prototype.getUpdatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.loginmsg.PB_AccountLoginHistory.prototype.setUpdatetime = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * @enum {number}
 */
proto.loginmsg.PB_AccountLoginHistory.PB_LoginRoleTye = {
  MAN: 0,
  WOMEN: 1
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.loginmsg.CS11001 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.loginmsg.CS11001, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.loginmsg.CS11001.displayName = 'proto.loginmsg.CS11001';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.loginmsg.CS11001.prototype.toObject = function(opt_includeInstance) {
  return proto.loginmsg.CS11001.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.loginmsg.CS11001} msg The msg instance to transform.
 * @return {!Object}
 */
proto.loginmsg.CS11001.toObject = function(includeInstance, msg) {
  var f, obj = {
    platformtype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    account: jspb.Message.getFieldWithDefault(msg, 2, ""),
    password: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clienttype: jspb.Message.getFieldWithDefault(msg, 4, ""),
    uuid: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.loginmsg.CS11001}
 */
proto.loginmsg.CS11001.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.loginmsg.CS11001;
  return proto.loginmsg.CS11001.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.loginmsg.CS11001} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.loginmsg.CS11001}
 */
proto.loginmsg.CS11001.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.loginmsg.CS11001.PB_PlatformType} */ (reader.readEnum());
      msg.setPlatformtype(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClienttype(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.loginmsg.CS11001} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.loginmsg.CS11001.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.loginmsg.CS11001.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.loginmsg.CS11001.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getPlatformtype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getAccount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getClienttype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getUuid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional PB_PlatformType platformType = 1;
 * @return {!proto.loginmsg.CS11001.PB_PlatformType}
 */
proto.loginmsg.CS11001.prototype.getPlatformtype = function() {
  return /** @type {!proto.loginmsg.CS11001.PB_PlatformType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.loginmsg.CS11001.PB_PlatformType} value */
proto.loginmsg.CS11001.prototype.setPlatformtype = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string account = 2;
 * @return {string}
 */
proto.loginmsg.CS11001.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.loginmsg.CS11001.prototype.setAccount = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string password = 3;
 * @return {string}
 */
proto.loginmsg.CS11001.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.loginmsg.CS11001.prototype.setPassword = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string clientType = 4;
 * @return {string}
 */
proto.loginmsg.CS11001.prototype.getClienttype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.loginmsg.CS11001.prototype.setClienttype = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string uuid = 5;
 * @return {string}
 */
proto.loginmsg.CS11001.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.loginmsg.CS11001.prototype.setUuid = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * @enum {number}
 */
proto.loginmsg.CS11001.PacketType = {
  PB_TEMP: 0,
  PB_PACKTYPE: 11001,
  PB_PACKRETTYPE: 11002
};

/**
 * @enum {number}
 */
proto.loginmsg.CS11001.PB_PlatformType = {
  LOCAL_TEST: 0,
  LOCAL_LOGIN: 1
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.loginmsg.SC11002 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.loginmsg.SC11002.repeatedFields_, null);
};
goog.inherits(proto.loginmsg.SC11002, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.loginmsg.SC11002.displayName = 'proto.loginmsg.SC11002';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.loginmsg.SC11002.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.loginmsg.SC11002.prototype.toObject = function(opt_includeInstance) {
  return proto.loginmsg.SC11002.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.loginmsg.SC11002} msg The msg instance to transform.
 * @return {!Object}
 */
proto.loginmsg.SC11002.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    playerid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    loginhistoriesList: jspb.Message.toObjectList(msg.getLoginhistoriesList(),
    proto.loginmsg.PB_AccountLoginHistory.toObject, includeInstance),
    serverinfosList: jspb.Message.toObjectList(msg.getServerinfosList(),
    proto.loginmsg.PB_ServerInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.loginmsg.SC11002}
 */
proto.loginmsg.SC11002.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.loginmsg.SC11002;
  return proto.loginmsg.SC11002.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.loginmsg.SC11002} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.loginmsg.SC11002}
 */
proto.loginmsg.SC11002.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPlayerid(value);
      break;
    case 3:
      var value = new proto.loginmsg.PB_AccountLoginHistory;
      reader.readMessage(value,proto.loginmsg.PB_AccountLoginHistory.deserializeBinaryFromReader);
      msg.addLoginhistories(value);
      break;
    case 4:
      var value = new proto.loginmsg.PB_ServerInfo;
      reader.readMessage(value,proto.loginmsg.PB_ServerInfo.deserializeBinaryFromReader);
      msg.addServerinfos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.loginmsg.SC11002} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.loginmsg.SC11002.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.loginmsg.SC11002.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.loginmsg.SC11002.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getPlayerid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = this.getLoginhistoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.loginmsg.PB_AccountLoginHistory.serializeBinaryToWriter
    );
  }
  f = this.getServerinfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.loginmsg.PB_ServerInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sessionId = 1;
 * @return {string}
 */
proto.loginmsg.SC11002.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.loginmsg.SC11002.prototype.setSessionid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 playerId = 2;
 * @return {number}
 */
proto.loginmsg.SC11002.prototype.getPlayerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.loginmsg.SC11002.prototype.setPlayerid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated PB_AccountLoginHistory loginHistories = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.loginmsg.PB_AccountLoginHistory>}
 */
proto.loginmsg.SC11002.prototype.getLoginhistoriesList = function() {
  return /** @type{!Array.<!proto.loginmsg.PB_AccountLoginHistory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.loginmsg.PB_AccountLoginHistory, 3));
};


/** @param {!Array.<!proto.loginmsg.PB_AccountLoginHistory>} value */
proto.loginmsg.SC11002.prototype.setLoginhistoriesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.loginmsg.PB_AccountLoginHistory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.loginmsg.PB_AccountLoginHistory}
 */
proto.loginmsg.SC11002.prototype.addLoginhistories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.loginmsg.PB_AccountLoginHistory, opt_index);
};


proto.loginmsg.SC11002.prototype.clearLoginhistoriesList = function() {
  this.setLoginhistoriesList([]);
};


/**
 * repeated PB_ServerInfo serverInfos = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.loginmsg.PB_ServerInfo>}
 */
proto.loginmsg.SC11002.prototype.getServerinfosList = function() {
  return /** @type{!Array.<!proto.loginmsg.PB_ServerInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.loginmsg.PB_ServerInfo, 4));
};


/** @param {!Array.<!proto.loginmsg.PB_ServerInfo>} value */
proto.loginmsg.SC11002.prototype.setServerinfosList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.loginmsg.PB_ServerInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.loginmsg.PB_ServerInfo}
 */
proto.loginmsg.SC11002.prototype.addServerinfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.loginmsg.PB_ServerInfo, opt_index);
};


proto.loginmsg.SC11002.prototype.clearServerinfosList = function() {
  this.setServerinfosList([]);
};


/**
 * @enum {number}
 */
proto.loginmsg.SC11002.PacketType = {
  PB_TEMP: 0,
  PB_PACKTYPE: 11002
};

goog.object.extend(exports, proto.loginmsg);
