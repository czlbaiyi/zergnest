// Code generated by protoc-gen-go.
// source: message.proto
// DO NOT EDIT!

/*
Package pb_message is a generated protocol buffer package.

It is generated from these files:
	message.proto

It has these top-level messages:
	PB_CommonMsg
	SC10000
	PB_ServerInfo
	PB_AccountLoginHistory
	CS11001
	SC11002
*/
package pb_message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SC10000_PacketType int32

const (
	SC10000_PB_Temp        SC10000_PacketType = 0
	SC10000_PB_PackRetType SC10000_PacketType = 10000
)

var SC10000_PacketType_name = map[int32]string{
	0:     "PB_Temp",
	10000: "PB_PackRetType",
}
var SC10000_PacketType_value = map[string]int32{
	"PB_Temp":        0,
	"PB_PackRetType": 10000,
}

func (x SC10000_PacketType) String() string {
	return proto.EnumName(SC10000_PacketType_name, int32(x))
}
func (SC10000_PacketType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type SC10000ErrorCodeType int32

const (
	SC10000_PB_BuffPraseError SC10000ErrorCodeType = 0
	SC10000_PB_MsgPraseError  SC10000ErrorCodeType = 1
	SC10000_PB_MsgDealError   SC10000ErrorCodeType = 2
)

var SC10000ErrorCodeType_name = map[int32]string{
	0: "PB_BuffPraseError",
	1: "PB_MsgPraseError",
	2: "PB_MsgDealError",
}
var SC10000ErrorCodeType_value = map[string]int32{
	"PB_BuffPraseError": 0,
	"PB_MsgPraseError":  1,
	"PB_MsgDealError":   2,
}

func (x SC10000ErrorCodeType) String() string {
	return proto.EnumName(SC10000ErrorCodeType_name, int32(x))
}
func (SC10000ErrorCodeType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 1} }

type PB_ServerInfo_PB_ServerStatus int32

const (
	PB_ServerInfo_good     PB_ServerInfo_PB_ServerStatus = 0
	PB_ServerInfo_crowd    PB_ServerInfo_PB_ServerStatus = 1
	PB_ServerInfo_busy     PB_ServerInfo_PB_ServerStatus = 2
	PB_ServerInfo_maintain PB_ServerInfo_PB_ServerStatus = 3
)

var PB_ServerInfo_PB_ServerStatus_name = map[int32]string{
	0: "good",
	1: "crowd",
	2: "busy",
	3: "maintain",
}
var PB_ServerInfo_PB_ServerStatus_value = map[string]int32{
	"good":     0,
	"crowd":    1,
	"busy":     2,
	"maintain": 3,
}

func (x PB_ServerInfo_PB_ServerStatus) String() string {
	return proto.EnumName(PB_ServerInfo_PB_ServerStatus_name, int32(x))
}
func (PB_ServerInfo_PB_ServerStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 0}
}

type PB_AccountLoginHistory_PB_LoginRoleTye int32

const (
	PB_AccountLoginHistory_man   PB_AccountLoginHistory_PB_LoginRoleTye = 0
	PB_AccountLoginHistory_women PB_AccountLoginHistory_PB_LoginRoleTye = 1
)

var PB_AccountLoginHistory_PB_LoginRoleTye_name = map[int32]string{
	0: "man",
	1: "women",
}
var PB_AccountLoginHistory_PB_LoginRoleTye_value = map[string]int32{
	"man":   0,
	"women": 1,
}

func (x PB_AccountLoginHistory_PB_LoginRoleTye) String() string {
	return proto.EnumName(PB_AccountLoginHistory_PB_LoginRoleTye_name, int32(x))
}
func (PB_AccountLoginHistory_PB_LoginRoleTye) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3, 0}
}

type CS11001_PacketType int32

const (
	CS11001_PB_Temp        CS11001_PacketType = 0
	CS11001_PB_PackType    CS11001_PacketType = 11001
	CS11001_PB_PackRetType CS11001_PacketType = 11002
)

var CS11001_PacketType_name = map[int32]string{
	0:     "PB_Temp",
	11001: "PB_PackType",
	11002: "PB_PackRetType",
}
var CS11001_PacketType_value = map[string]int32{
	"PB_Temp":        0,
	"PB_PackType":    11001,
	"PB_PackRetType": 11002,
}

func (x CS11001_PacketType) String() string {
	return proto.EnumName(CS11001_PacketType_name, int32(x))
}
func (CS11001_PacketType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

type CS11001_PB_PlatformType int32

const (
	CS11001_local_login    CS11001_PB_PlatformType = 0
	CS11001_platform_login CS11001_PB_PlatformType = 1
)

var CS11001_PB_PlatformType_name = map[int32]string{
	0: "local_login",
	1: "platform_login",
}
var CS11001_PB_PlatformType_value = map[string]int32{
	"local_login":    0,
	"platform_login": 1,
}

func (x CS11001_PB_PlatformType) String() string {
	return proto.EnumName(CS11001_PB_PlatformType_name, int32(x))
}
func (CS11001_PB_PlatformType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 1} }

type SC11002_PacketType int32

const (
	SC11002_PB_Temp     SC11002_PacketType = 0
	SC11002_PB_PackType SC11002_PacketType = 10001
)

var SC11002_PacketType_name = map[int32]string{
	0:     "PB_Temp",
	10001: "PB_PackType",
}
var SC11002_PacketType_value = map[string]int32{
	"PB_Temp":     0,
	"PB_PackType": 10001,
}

func (x SC11002_PacketType) String() string {
	return proto.EnumName(SC11002_PacketType_name, int32(x))
}
func (SC11002_PacketType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 0} }

// //////////////////////////////////////////////通用协议///////////////////////////////////
// 通用消息包
type PB_CommonMsg struct {
	MsgId  int32  `protobuf:"varint,1,opt,name=msgId" json:"msgId,omitempty"`
	OpCode int32  `protobuf:"varint,2,opt,name=opCode" json:"opCode,omitempty"`
	MsgBuf []byte `protobuf:"bytes,3,opt,name=msgBuf,proto3" json:"msgBuf,omitempty"`
}

func (m *PB_CommonMsg) Reset()                    { *m = PB_CommonMsg{} }
func (m *PB_CommonMsg) String() string            { return proto.CompactTextString(m) }
func (*PB_CommonMsg) ProtoMessage()               {}
func (*PB_CommonMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// 通用错误返回
type SC10000 struct {
	ErrorMsg  string               `protobuf:"bytes,1,opt,name=errorMsg" json:"errorMsg,omitempty"`
	CsOpcode  int32                `protobuf:"varint,2,opt,name=csOpcode" json:"csOpcode,omitempty"`
	ErrorCode SC10000ErrorCodeType `protobuf:"varint,3,opt,name=errorCode,enum=pb_message.SC10000ErrorCodeType" json:"errorCode,omitempty"`
}

func (m *SC10000) Reset()                    { *m = SC10000{} }
func (m *SC10000) String() string            { return proto.CompactTextString(m) }
func (*SC10000) ProtoMessage()               {}
func (*SC10000) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type PB_ServerInfo struct {
	ServerId   int32                         `protobuf:"varint,1,opt,name=serverId" json:"serverId,omitempty"`
	ServerName string                        `protobuf:"bytes,2,opt,name=serverName" json:"serverName,omitempty"`
	ServerUrl  string                        `protobuf:"bytes,3,opt,name=serverUrl" json:"serverUrl,omitempty"`
	Status     PB_ServerInfo_PB_ServerStatus `protobuf:"varint,4,opt,name=status,enum=pb_message.PB_ServerInfo_PB_ServerStatus" json:"status,omitempty"`
}

func (m *PB_ServerInfo) Reset()                    { *m = PB_ServerInfo{} }
func (m *PB_ServerInfo) String() string            { return proto.CompactTextString(m) }
func (*PB_ServerInfo) ProtoMessage()               {}
func (*PB_ServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type PB_AccountLoginHistory struct {
	ServerId   int32                                  `protobuf:"varint,1,opt,name=serverId" json:"serverId,omitempty"`
	RoleType   PB_AccountLoginHistory_PB_LoginRoleTye `protobuf:"varint,2,opt,name=roleType,enum=pb_message.PB_AccountLoginHistory_PB_LoginRoleTye" json:"roleType,omitempty"`
	RoleName   string                                 `protobuf:"bytes,3,opt,name=roleName" json:"roleName,omitempty"`
	RoleLevel  int32                                  `protobuf:"varint,4,opt,name=roleLevel" json:"roleLevel,omitempty"`
	AwakeLevel int32                                  `protobuf:"varint,5,opt,name=awakeLevel" json:"awakeLevel,omitempty"`
	VipLevel   int32                                  `protobuf:"varint,6,opt,name=vipLevel" json:"vipLevel,omitempty"`
	UpdateTime int64                                  `protobuf:"varint,7,opt,name=updateTime" json:"updateTime,omitempty"`
}

func (m *PB_AccountLoginHistory) Reset()                    { *m = PB_AccountLoginHistory{} }
func (m *PB_AccountLoginHistory) String() string            { return proto.CompactTextString(m) }
func (*PB_AccountLoginHistory) ProtoMessage()               {}
func (*PB_AccountLoginHistory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// HTTP头数据：opcode:消息号  sessionId:会话ID
// 玩家登陆 CS11001（第三方登陆或本地测试登陆都使用该协议）
type CS11001 struct {
	PlatformType CS11001_PB_PlatformType `protobuf:"varint,1,opt,name=platformType,enum=pb_message.CS11001_PB_PlatformType" json:"platformType,omitempty"`
	// 账号信息
	PlatformAccountId string `protobuf:"bytes,2,opt,name=platformAccountId" json:"platformAccountId,omitempty"`
	AuthId            string `protobuf:"bytes,3,opt,name=authId" json:"authId,omitempty"`
	// 客户端硬件信息
	ClientType  string `protobuf:"bytes,4,opt,name=clientType" json:"clientType,omitempty"`
	Uuid        string `protobuf:"bytes,5,opt,name=uuid" json:"uuid,omitempty"`
	ChannelId   int32  `protobuf:"varint,6,opt,name=channelId" json:"channelId,omitempty"`
	AdChannelId int64  `protobuf:"varint,7,opt,name=adChannelId" json:"adChannelId,omitempty"`
}

func (m *CS11001) Reset()                    { *m = CS11001{} }
func (m *CS11001) String() string            { return proto.CompactTextString(m) }
func (*CS11001) ProtoMessage()               {}
func (*CS11001) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

// 登陆返回 SC11002
type SC11002 struct {
	SessionId           string                    `protobuf:"bytes,1,opt,name=sessionId" json:"sessionId,omitempty"`
	LocalPlayerId       int64                     `protobuf:"varint,2,opt,name=localPlayerId" json:"localPlayerId,omitempty"`
	PlatformAccountId   string                    `protobuf:"bytes,3,opt,name=platformAccountId" json:"platformAccountId,omitempty"`
	PlatformAccountName string                    `protobuf:"bytes,4,opt,name=platformAccountName" json:"platformAccountName,omitempty"`
	AccessToken         string                    `protobuf:"bytes,5,opt,name=accessToken" json:"accessToken,omitempty"`
	LoginHistories      []*PB_AccountLoginHistory `protobuf:"bytes,6,rep,name=loginHistories" json:"loginHistories,omitempty"`
	ServerInfos         []*PB_ServerInfo          `protobuf:"bytes,7,rep,name=serverInfos" json:"serverInfos,omitempty"`
}

func (m *SC11002) Reset()                    { *m = SC11002{} }
func (m *SC11002) String() string            { return proto.CompactTextString(m) }
func (*SC11002) ProtoMessage()               {}
func (*SC11002) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *SC11002) GetLoginHistories() []*PB_AccountLoginHistory {
	if m != nil {
		return m.LoginHistories
	}
	return nil
}

func (m *SC11002) GetServerInfos() []*PB_ServerInfo {
	if m != nil {
		return m.ServerInfos
	}
	return nil
}

func init() {
	proto.RegisterType((*PB_CommonMsg)(nil), "pb_message.PB_CommonMsg")
	proto.RegisterType((*SC10000)(nil), "pb_message.SC10000")
	proto.RegisterType((*PB_ServerInfo)(nil), "pb_message.PB_ServerInfo")
	proto.RegisterType((*PB_AccountLoginHistory)(nil), "pb_message.PB_AccountLoginHistory")
	proto.RegisterType((*CS11001)(nil), "pb_message.CS11001")
	proto.RegisterType((*SC11002)(nil), "pb_message.SC11002")
	proto.RegisterEnum("pb_message.SC10000_PacketType", SC10000_PacketType_name, SC10000_PacketType_value)
	proto.RegisterEnum("pb_message.SC10000ErrorCodeType", SC10000ErrorCodeType_name, SC10000ErrorCodeType_value)
	proto.RegisterEnum("pb_message.PB_ServerInfo_PB_ServerStatus", PB_ServerInfo_PB_ServerStatus_name, PB_ServerInfo_PB_ServerStatus_value)
	proto.RegisterEnum("pb_message.PB_AccountLoginHistory_PB_LoginRoleTye", PB_AccountLoginHistory_PB_LoginRoleTye_name, PB_AccountLoginHistory_PB_LoginRoleTye_value)
	proto.RegisterEnum("pb_message.CS11001_PacketType", CS11001_PacketType_name, CS11001_PacketType_value)
	proto.RegisterEnum("pb_message.CS11001_PB_PlatformType", CS11001_PB_PlatformType_name, CS11001_PB_PlatformType_value)
	proto.RegisterEnum("pb_message.SC11002_PacketType", SC11002_PacketType_name, SC11002_PacketType_value)
}

func init() { proto.RegisterFile("message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 789 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x95, 0x51, 0x6f, 0xe3, 0x44,
	0x10, 0xc7, 0xeb, 0xa4, 0x49, 0xea, 0x49, 0x9b, 0xf3, 0x6d, 0x8f, 0x53, 0x40, 0x08, 0x05, 0x03,
	0x52, 0x11, 0x28, 0x72, 0x82, 0xc4, 0x0b, 0x12, 0x70, 0x0e, 0x08, 0x82, 0xae, 0xc5, 0x6c, 0xd3,
	0x67, 0x6b, 0x6b, 0x6f, 0x7c, 0x56, 0x6d, 0xaf, 0xe5, 0xb5, 0x5b, 0xf5, 0x03, 0x94, 0x67, 0xf8,
	0x48, 0x7c, 0x1f, 0xbe, 0x00, 0x3c, 0xa1, 0x1d, 0x6f, 0x6d, 0xb7, 0xa4, 0x70, 0x6f, 0xfb, 0xff,
	0xcf, 0xce, 0x64, 0xe7, 0xb7, 0x3b, 0x0e, 0x1c, 0xa5, 0x5c, 0x4a, 0x16, 0xf1, 0x79, 0x5e, 0x88,
	0x52, 0x10, 0xc8, 0x2f, 0x7d, 0xed, 0xd8, 0x1b, 0x38, 0xf4, 0x5c, 0x7f, 0x25, 0xd2, 0x54, 0x64,
	0xa7, 0x32, 0x22, 0x2f, 0x60, 0x90, 0xca, 0x68, 0x1d, 0x4e, 0x8d, 0x99, 0x71, 0x32, 0xa0, 0xb5,
	0x20, 0x2f, 0x61, 0x28, 0xf2, 0x95, 0x08, 0xf9, 0xb4, 0x87, 0xb6, 0x56, 0xca, 0x4f, 0x65, 0xe4,
	0x56, 0xdb, 0x69, 0x7f, 0x66, 0x9c, 0x1c, 0x52, 0xad, 0xec, 0xbb, 0x1e, 0x8c, 0xce, 0x57, 0x0b,
	0xc7, 0x71, 0x1c, 0xf2, 0x1e, 0x1c, 0xf0, 0xa2, 0x10, 0xc5, 0xa9, 0x8c, 0xb0, 0xa8, 0x49, 0x1b,
	0xad, 0x62, 0x81, 0xfc, 0x39, 0x0f, 0xda, 0xca, 0x8d, 0x26, 0xdf, 0x80, 0x89, 0xfb, 0xf0, 0x67,
	0x55, 0xf9, 0xc9, 0xf2, 0xc3, 0x79, 0x7b, 0xf2, 0xb9, 0xae, 0x3f, 0x6f, 0x36, 0x6d, 0x6e, 0x73,
	0x4e, 0xdb, 0x1c, 0x7b, 0x0e, 0xe0, 0xb1, 0xe0, 0x8a, 0x97, 0x2a, 0x40, 0xc6, 0x30, 0xf2, 0x5c,
	0x7f, 0xc3, 0xd3, 0xdc, 0xda, 0x23, 0xc7, 0x30, 0xf1, 0x5c, 0x5f, 0x45, 0x69, 0x1d, 0xb6, 0x7e,
	0x3b, 0xb3, 0x7f, 0x81, 0xa3, 0x07, 0xb5, 0xc8, 0x3b, 0xf0, 0xdc, 0x73, 0x7d, 0xb7, 0xda, 0x6e,
	0xbd, 0x82, 0x49, 0xfe, 0xbd, 0x0a, 0x5a, 0x7b, 0xe4, 0x05, 0x58, 0x9e, 0xeb, 0x9f, 0xca, 0xa8,
	0xe3, 0x1a, 0xe4, 0x18, 0x9e, 0xd5, 0xee, 0x77, 0x9c, 0x25, 0xb5, 0xd9, 0xb3, 0xff, 0x34, 0xe0,
	0xc8, 0x73, 0xfd, 0x73, 0x5e, 0x5c, 0xf3, 0x62, 0x9d, 0x6d, 0x85, 0xea, 0x58, 0xd6, 0xea, 0x1e,
	0x71, 0xa3, 0xc9, 0x07, 0x00, 0xf5, 0xfa, 0x8c, 0xa5, 0x35, 0x0f, 0x93, 0x76, 0x1c, 0xf2, 0x3e,
	0x98, 0xb5, 0xba, 0x28, 0x12, 0x24, 0x62, 0xd2, 0xd6, 0x20, 0xaf, 0x60, 0x28, 0x4b, 0x56, 0x56,
	0x72, 0xba, 0x8f, 0xb0, 0x3e, 0xed, 0xc2, 0x7a, 0x70, 0x88, 0x56, 0x9d, 0x63, 0x02, 0xd5, 0x89,
	0xf6, 0xd7, 0xd8, 0x43, 0x37, 0x44, 0x0e, 0x60, 0x3f, 0x12, 0x22, 0xb4, 0xf6, 0x88, 0x09, 0x83,
	0xa0, 0x10, 0x37, 0xa1, 0x65, 0x28, 0xf3, 0xb2, 0x92, 0xb7, 0x56, 0x8f, 0x1c, 0xc2, 0x41, 0xca,
	0xe2, 0xac, 0x64, 0x71, 0x66, 0xf5, 0xed, 0x3f, 0x7a, 0xf0, 0xd2, 0x73, 0xfd, 0x57, 0x41, 0x20,
	0xaa, 0xac, 0x7c, 0x2d, 0xa2, 0x38, 0xfb, 0x31, 0x96, 0xa5, 0x28, 0x6e, 0xff, 0xb3, 0xef, 0x33,
	0x38, 0x28, 0x44, 0x82, 0xcc, 0xb1, 0xeb, 0xc9, 0x72, 0xf9, 0xe8, 0xec, 0x3b, 0x2a, 0x2a, 0x1b,
	0x35, 0xc5, 0x54, 0x4e, 0x9b, 0x1a, 0xea, 0xb7, 0xd4, 0x1a, 0x29, 0xd6, 0x98, 0x1a, 0xad, 0x18,
	0xaa, 0xf5, 0x6b, 0x7e, 0xcd, 0x13, 0x04, 0x35, 0xa0, 0xad, 0xa1, 0x6e, 0x80, 0xdd, 0xb0, 0x2b,
	0x1d, 0x1e, 0x60, 0xb8, 0xe3, 0xa8, 0xca, 0xd7, 0x71, 0x5e, 0x47, 0x87, 0x75, 0x17, 0xf7, 0x5a,
	0xe5, 0x56, 0x79, 0xc8, 0x4a, 0xbe, 0x89, 0x53, 0x3e, 0x1d, 0xcd, 0x8c, 0x93, 0x3e, 0xed, 0x38,
	0xf6, 0x27, 0x08, 0xb7, 0x7b, 0x64, 0x32, 0x82, 0x7e, 0xca, 0xb2, 0x9a, 0xed, 0x8d, 0x48, 0x79,
	0x66, 0x19, 0xf6, 0xaf, 0x7d, 0x18, 0xad, 0xce, 0x17, 0x0b, 0xc7, 0x59, 0x90, 0x1f, 0xe0, 0x30,
	0x4f, 0x58, 0xb9, 0x15, 0x45, 0x8a, 0x70, 0x0c, 0x84, 0xf3, 0x51, 0x17, 0x8e, 0xde, 0xaa, 0x68,
	0x78, 0x9d, 0xad, 0xf4, 0x41, 0x22, 0xf9, 0x1c, 0x9e, 0xdf, 0x6b, 0x8d, 0x72, 0x1d, 0xea, 0x07,
	0xf6, 0xef, 0x80, 0x9a, 0x6a, 0x56, 0x95, 0x6f, 0xd6, 0xa1, 0xa6, 0xa7, 0x95, 0xea, 0x30, 0x48,
	0x62, 0x9e, 0xe1, 0xc4, 0x20, 0x3c, 0x93, 0x76, 0x1c, 0x42, 0x60, 0xbf, 0xaa, 0xe2, 0x10, 0xb9,
	0x99, 0x14, 0xd7, 0x8a, 0x77, 0xf0, 0x86, 0x65, 0x19, 0x4f, 0xd6, 0xa1, 0x46, 0xd6, 0x1a, 0x64,
	0x06, 0x63, 0x16, 0xae, 0x9a, 0x78, 0x0d, 0xad, 0x6b, 0xd9, 0xdf, 0x3e, 0x3d, 0xc4, 0x16, 0x8c,
	0xf5, 0x10, 0xe3, 0x04, 0xff, 0x75, 0xb1, 0x63, 0xac, 0xff, 0xbe, 0xb0, 0xbf, 0x44, 0xee, 0x5d,
	0x38, 0xe4, 0x19, 0x8c, 0x13, 0x11, 0xb0, 0xc4, 0x4f, 0xd4, 0x6d, 0x58, 0x7b, 0x84, 0xc0, 0xe4,
	0x1e, 0x83, 0xf6, 0x0c, 0xfb, 0xae, 0x8f, 0xdf, 0xb0, 0x85, 0xe3, 0x2c, 0xeb, 0xc9, 0x93, 0x32,
	0x16, 0x99, 0x7e, 0xbe, 0x38, 0x79, 0xda, 0x20, 0x1f, 0xc3, 0x11, 0x96, 0xf3, 0x12, 0x76, 0x8b,
	0x0f, 0xbc, 0x87, 0x7d, 0x3c, 0x34, 0x77, 0xdf, 0x41, 0xff, 0xa9, 0x3b, 0x70, 0xe0, 0xf8, 0x91,
	0x89, 0xcf, 0xb9, 0x86, 0xbe, 0x2b, 0x84, 0x2c, 0x83, 0x80, 0x4b, 0xb9, 0x11, 0x57, 0x3c, 0xd3,
	0x97, 0xd0, 0xb5, 0xc8, 0x4f, 0x30, 0x49, 0xda, 0x09, 0x8a, 0xb9, 0x9c, 0x0e, 0x67, 0xfd, 0x93,
	0xf1, 0xd2, 0xfe, 0xff, 0x69, 0xa3, 0x8f, 0x32, 0xc9, 0x57, 0x30, 0x96, 0xcd, 0x07, 0x45, 0x4e,
	0x47, 0x58, 0xe8, 0xdd, 0x27, 0x3f, 0x39, 0xb4, 0xbb, 0xdb, 0xfe, 0xec, 0xad, 0x2f, 0xf5, 0xf7,
	0xb3, 0xcb, 0x21, 0xfe, 0x69, 0x7d, 0xf1, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9f, 0x9a, 0xff,
	0x76, 0xc5, 0x06, 0x00, 0x00,
}
